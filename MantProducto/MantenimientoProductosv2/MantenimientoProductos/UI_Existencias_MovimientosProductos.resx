<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAY5JREFUSEu9lj9OwzAYxaMOiAExM3TKzCEQc8/QAyDmDlWFVHGGTogTMCAOUDGg
        zhlY2qo0Q6VEiCOgSPye80UQShqXEJ70ZPv5+1P7s50Gu7CIkxAO4RS+LuI0y6m+0zQXmrk/5ATv4Buc
        wB7sLtebA1F90zQnG9n6JcKwz6+U0wgemVwJ2eS2zqdv8s/AYIDhC+2pSd6Qj/kOTCpD2Z3BOumatDfk
        a0nKK0Fgz90S9/7l36EYFuuzJgxUpJENG0OxFLMY6MQoY2VBl3HSYX4Mr0zaCcWymKEGOssTm9uCGd/D
        GTwxuRaKCYfq6ML0TC8BXbV5pr2FhyZ7QTHhVB3dyq2Tg3ZG8JT2chVvOiZ7QzEVm06a6Xaa7sDExTxO
        32kfOXpjX5q7Q37j0+w/ElRu0XmxRVEUNdmiuiInKvINLK2yDooJXZHrjukxfIBP8FfH1PeiXUOv265Y
        FjN/Lui091QIykRBlbGdx05AaO+5LsBEex+cAspuS/z7T2YBDHWy2vnof4WcYIO/LUHwAeJKiUvXb8NL
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="buttonAgregarExistencias.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAvJJREFUaEPVmj1uGzEQhYVACFIHQYoUPoCRk6R0kTq1iyCFClfqfAZBR/AxDAhw
        6UInkFS6FiRBP877lFmHGhOOd7mSMw94gMQZvhkuuVySu502sF6vz7bb7Y/dbjcQb8WJOBcfjfymDNsA
        X+pY9beBEvisZHrivVglWpfU7aFlssfHZrM5U9ChuLAk2iBaQ7QtTPtYrVYfFKRvwXJJtEG0+8SysO1A
        V+arhMdJIM+teCdea3xfyP98uVx+nE6nXchvyrDhY77UyWnBMTEtfBkU9LsE0xsy5Uy80hj+Yu6vBnWo
        axo57Tmxzb0ZJPAzIwwfZLtUV78318ZAAy00XYw9ZftlrvVAxZygeKOr98ncWgOaaLtYe9ZuhCowbLzQ
        mis1Go3emVvrQJsYxHKxacTrhpPdsH7MLyTwzVyODmIR0+Uw/+eNbVOln2248idLvoI1wvfE+MUpVg7M
        82kFuu7SzCcHsX0+Yt/Mh1D38IT13XbTdMw7nUcrrgVik4PTWpCrufyFDCwPUseHktnGaTVqALDZyU+x
        QzP/gZxYmB1c/dKhk2pBK26EzFBakLOZ98FYVaYOs9KHlNMragC5kJPT7Jl5H8wvia/M1BhOr6gBgJyc
        5v3eoK7g5k0NW5XVXtt4OM3iBpATuaWa5M74YieVBruzOkVwmsUNAOSWapI7hWwD02DX5l8Ep9lWA1iK
        p7oDCtmnPhWqVRfmX4RUE1pxEcjN6d4SiM32U6EeEufmX4RUE1pxEcjN6U4IdLBwY/dk/lmkvseghcmC
        3Jz//FlCk8mka/5ZeP+2aWGyILdn/r4gYgPCD6HwN3H4aTT2g4zHsSuMtZQIv5gD+hN3OQ30J/aGRl0R
        e0sJVBh3Uw84qpAh7rEKkDHuwRbg2E4OcY8Wgbon7uFuBQnEPV6voApxX3BUeKER//8rpgoSiPuSr4Ld
        2LVfs85msy7kN2XY8DHf07xmrWBTbMwX3Sl0ZWJ+auChMRzzY48clMAbfW7T6fwGOWwtoN+QGl0AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>